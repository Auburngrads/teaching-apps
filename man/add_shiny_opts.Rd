% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_shiny_opts.R
\name{add_shiny_opts}
\alias{add_shiny_opts}
\title{Pass objects and customization options to a shiny app}
\usage{
add_shiny_opts(opts, dir, theme = "flatly", stamp = NULL)
}
\arguments{
\item{opts}{A \code{list} of additional options or objects to pass to a shiny app}

\item{dir}{A \code{character} string indicating the path to the directory containing ui.R and server.R}

\item{theme}{A \code{character} string naming a Bootswatch color theme (used by \code{shinythemes::shinytheme})}

\item{stamp}{A \code{character} naming a fontAwesome icon or a path to an image file printed at the bottom of an app}
}
\value{
A list of options set with \code{shinyOptions}
}
\description{
Provides a general method for passing arguments to shiny apps
    each as a \code{shiny::shinyOption}.
}
\details{
Passing a customization option as a \code{shiny::shinyOption} 
   ensures the option is carried through to app deployment.

Shiny apps are not functions, therefore customization options cannot be
    passed to a shiny app as simply as argument are passed between functions.  Further,
    the manner in which objects are loaded prior to deploying an app differ if the app
    will be published as a stand-alone or embedded within an rmarkdown docmuent.
    Assigning objects to shiny options ensures that these values are passed to a shiny
    app much the same way as arguments are passed to functions.
}
